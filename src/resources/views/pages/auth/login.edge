@layout.auth({ title: "Login Page" })
@slot('main')
<div class="bg-no-repeat bg-cover bg-center relative"
  style="background-image: url(https://png.pngtree.com/thumb_back/fh260/background/20210903/pngtree-airplane-airplane-cloud-business-cloud-layer-image_792625.jpg);">
  <div class="absolute bg-gradient-to-b from-white to-blue-400 opacity-75 inset-0 z-0"></div>
  <div class="min-h-screen sm:flex sm:flex-row mx-5 justify-center">
    <div class="flex-col flex self-center p-10 sm:max-w-5xl xl:max-w-2xl  z-10">
      <div class="self-start hidden lg:flex flex-col text-blue-950">
        <img src="" class="mb-3">
        <h1 class="mb-3 font-bold text-5xl">Hello buddy? Welcome Back</h1>
        <p class="pr-3">Hard work today is an investment in a brighter future. Donâ€™t be afraid of failure, as every
          setback is a stepping stone to greater success. When fatigue sets in, remember that all your efforts will pay
          off, even more than you can imagine.</p>
      </div>
    </div>
    <div
      class="w-full md:max-w-md lg:max-w-full md:mx-auto md:w-1/2 xl:w-1/3 h-screen px-3 lg:px-16 xl:px-12 flex items-center justify-center">
      <div class="font-sans w-3/4 h-100">
        <div class="relative flex flex-col sm:justify-center items-center">
          <div class="relative sm:max-w-sm w-full">
            <div class="card bg-blue-400 shadow-lg  w-full h-full rounded-3xl absolute  transform -rotate-6">
            </div>
            <div class="card bg-red-400 shadow-lg  w-full h-full rounded-3xl absolute  transform rotate-6">
            </div>
            <div class="relative w-full rounded-3xl px-6 py-7 bg-gray-100 shadow-md text-black">
              <div class="flex justify-center items-center mr-5">
                <img src="/images/logo-no-bg.png" class="rounded-lg" width="45px" alt="logo">
                <label for="" class="text-xl text-gray-700 font-semibold">TraveLynk</label>
              </div>
              <form method="post" action="#" class="mt-5">
                <div>
                  <input type="email" placeholder="Email" name="email" id="email"
                    class="mt-1 px-3 block w-full border-none bg-gray-100 h-11 rounded-xl shadow-lg hover:bg-blue-100 focus:bg-blue-100 focus:ring-0">
                </div>
                <div class="mt-7">
                  <input type="password" placeholder="Password" name="password" id="password"
                    class="mt-1 px-3 block w-full border-none bg-gray-100 h-11 rounded-xl shadow-lg hover:bg-blue-100 focus:bg-blue-100 focus:ring-0">
                </div>
                <div class="mt-7">
                  <button type="button" onclick="login()"
                    class="bg-blue-500 w-full py-3 rounded-xl text-white shadow-xl hover:shadow-inner focus:outline-none transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105">
                    Login
                  </button>
                </div>
                <div class="flex mt-7 items-center text-center">
                  <hr class="border-gray-300 border-1 w-full rounded-md">
                  <label class="block font-medium text-sm text-gray-600 w-full">
                    Or
                  </label>
                  <hr class="border-gray-300 border-1 w-full rounded-md">
                </div>
                <div class="flex mt-7 mb-3 justify-center w-full">
                  <button type="button" onclick="oAuthLogin()"
                    class="bg-white text-black flex items-center justify-center gap-2 border-none px-4 py-2 rounded-xl cursor-pointer shadow-xl hover:shadow-inner transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105">
                    <img src="/images/icons/google.svg" width="25px" alt="google">
                    <span>Google</span>
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const login = async () => {
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;

    const response = await fetch('{{ api }}/api/v1/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email,
        password
      }),
    });

    const result = await response.json();
    if (result.status.code === 200) {
      const { token, user } = result.data;

      if (user.role !== "admin") {
        return showToast('error', 'Error', 'Maaf, Anda tidak diizinkan untuk mengakses sumber daya ini.');
      }

      localStorage.setItem('token', token);
      localStorage.setItem('user', JSON.stringify(user));

      await fetch('/admin/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          token,
          user,
        }),
      })
        .then(async (data) => {
          const response = await data.json();

          if (response.status !== "success") {
            return showToast('error', 'Error', response.message);
          }

          showToast('success', 'Success', 'Login berhasil');
          setTimeout(() => {
            window.location.href = '/admin/dashboard';
          }, 500);
        })
        .catch((error) => {
          showToast('error', 'Error', error.message);
        });

    } else {
      showToast('error', 'Error', result.message);
    };
  };

  const oAuthLogin = async () => {
    const response = await fetch('{{ api }}/api/v1/auth/google', {
      method: 'GET',
    });

    const result = await response.json();

    const popupUrl = result.data; // Endpoint backend untuk memulai OAuth
    const popup = window.open(popupUrl, '_blank', 'width=600,height=600');

    if (!popup) {
      showToast('error', 'Error', 'Popup terblokir oleh browser. Harap izinkan popups.');
      return;
    }

    // Dengarkan pesan dari popup
    window.addEventListener('message', async (event) => {
      const { result = null, error = null } = event.data;

      if (error) {
        return showToast('error', 'Error', error);
      }

      if (result) {
        const data = JSON.parse(result);
        const { token, user } = data;
        if (!token) {
          return showToast('error', 'Error', 'Login gagal, akun tidak valid.');
        }

        if (user.role !== "admin") {
          return showToast('error', 'Error', 'Maaf, Anda tidak diizinkan untuk mengakses sumber daya ini.');
        }

        await fetch('/admin/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            token,
            user,
          }),
        })
          .then(() => {
            localStorage.setItem('token', token);
            localStorage.setItem('user', JSON.stringify(user));
            showToast('success', 'Success', 'login berhasil');
            setTimeout(() => {
              window.location.href = '/admin/dashboard';
            }, 500);
          })
          .catch((error) => {
            showToast('error', 'Error', error.message);
          })
      };
    });
  }

</script>

@endslot
@end